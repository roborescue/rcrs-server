!include common.cfg
!include gis.cfg
!include comms.cfg
!include perception.cfg
!include score.cfg

# Also include configs for simulators and agents
!include collapse.cfg
!include clear.cfg
!include misc.cfg
!include resq-fire.cfg
!include traffic3.cfg
!include ignition.cfg
!include civilian.cfg
!include sample-agents.cfg
!include viewer.cfg

# Name of the kernel log file
kernel.logname: logs/rescue.log

# Number of timesteps to run
kernel.timesteps: 290

# The simulation termination conditions
kernel.termination: kernel.TimestepTerminationCondition
#kernel.termination: kernel.TimestepTerminationCondition rescuecore2.standard.kernel.CiviliansDeadOrRescuedTerminationCondition

# The amount of time (ms) agents have to send commands each timestep
kernel.agents.think-time: 1000
# Number of timesteps that agents commands are ignored
kernel.agents.ignoreuntil: 3

# List of command collectors to use
kernel.commandcollectors: kernel.TimedCommandCollector
#kernel.commandcollectors: kernel.TimedCommandCollector rescuecore2.standard.kernel.StandardCommandCollector

# List of command filters to use
kernel.commandfilters +: kernel.WrongTimeCommandFilter
kernel.commandfilters +: kernel.FrozenAgentsCommandFilter
kernel.commandfilters +: rescuecore2.standard.kernel.DeadAgentsCommandFilter
kernel.commandfilters +: rescuecore2.standard.kernel.BuriedAgentsCommandFilter
kernel.commandfilters +: rescuecore2.standard.kernel.SingleCommandFilter

# The agent registrar
kernel.agents.registrar: rescuecore2.standard.kernel.StandardAgentRegistrar

# The amount of time agents have to start up
kernel.startup.connect-time: 180000 # 3 minute startup time
# kernel.startup.connect-time: 10000 # 10 second startup time

# Automatic choice of GIS
kernel.gis.auto: gis2.GMLWorldModelCreator

# Automatic choice of perception
kernel.perception.auto: rescuecore2.standard.kernel.LineOfSightPerception
#kernel.perception.auto: rescuecore2.standard.kernel.StandardPerception

# Automatic choice of communication model
kernel.communication.auto: rescuecore2.standard.kernel.comms.ChannelCommunicationModel

# Kernel UI components
kernel.ui.components: rescuecore2.standard.kernel.StandardWorldModelViewerComponent


